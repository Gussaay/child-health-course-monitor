rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get a user's role.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // --- Collection Rules ---

    // Allow reading a course if it's public OR the user is logged in.
    // Writes are always restricted to logged-in users.
    match /courses/{courseId} {
      allow read: if request.auth != null || resource.data.isPublic == true;
      allow write: if request.auth != null;
    }

    // For related data, allow reads if the user is logged in OR
    // if the parent course they belong to is public.
    match /participants/{participantId} {
      allow read: if request.auth != null || get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.isPublic == true;
      allow write: if request.auth != null;
    }

    match /observations/{observationId} {
      allow read: if request.auth != null || get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.isPublic == true;
      allow write: if request.auth != null;
    }

    match /cases/{caseId} {
      allow read: if request.auth != null || get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.isPublic == true;
      allow write: if request.auth != null;
    }
    
    match /finalReports/{reportId} {
      allow read: if request.auth != null || get(/databases/$(database)/documents/courses/$(resource.data.courseId)).data.isPublic == true;
      allow write: if request.auth != null;
    }

    // Other collections remain accessible only to authenticated users.
    match /facilitators/{facilitatorId} {
      allow read, write: if request.auth != null;
    }
    match /coordinators/{coordinatorId} {
      allow read, write: if request.auth != null;
    }
    match /funders/{funderId} {
        allow read, write: if request.auth != null;
    }

    // User and Meta rules remain unchanged.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth.uid == userId || (request.auth != null && getUserRole() == 'super_user');
      allow update: if request.auth.uid == userId || (request.auth != null && getUserRole() == 'super_user');
    }

    match /meta/{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && getUserRole() == 'super_user';
    }
  }
}